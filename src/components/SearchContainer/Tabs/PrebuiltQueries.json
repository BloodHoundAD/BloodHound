{
    "queries": [
        {
            "name": "Find all Domain Admins",
            "category": "Domain Information",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(n:Group)<-[:MemberOf*1..]-(m) WHERE n.objectid =~ $name RETURN p",
                    "props": {
                        "name": "(?i)S-1-5-.*-512"
                    },
                    "allowCollapse": false
                }
            ]
        },
        {
            "name": "Map Domain Trusts",
            "category": "Domain Information",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(n:Domain)-->(m:Domain) RETURN p",
                    "allowCollapse": true
                }
            ]
        },
        {
            "name": "Find Computers with Unsupported Operating Systems",
            "category": "Domain Information",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (n:Computer) WHERE n.operatingsystem =~ \"(?i).*(2000|2003|2008|xp|vista|7|me).*\" RETURN n",
                    "allowCollapse": true
                }
            ]
        },
        {
            "name": "Find Principals with DCSync Rights",
            "category": "Dangerous Privileges",
            "queryList": [
                {
                    "final": false,
                    "title": "Select a Domain...",
                    "query": "MATCH (n:Domain) RETURN n.name ORDER BY n.name DESC"
                },
                {
                    "final": true,
                    "query": "MATCH p=()-[:DCSync|AllExtendedRights|GenericAll]->(:Domain {name: $result}) RETURN p",
                    "allowCollapse": true,
                    "endNode": "{}"
                }
            ]
        },
        {
            "name": "Users with Foreign Domain Group Membership",
            "category": "Dangerous Privileges",
            "queryList": [
                {
                    "final": false,
                    "title": "Select source domain...",
                    "query": "MATCH (n:Domain) RETURN n.name ORDER BY n.name DESC"
                },
                {
                    "final": true,
                    "query": "MATCH p=(n:User)-[:MemberOf]->(m:Group) WHERE n.domain=$result AND m.domain<>n.domain RETURN p",
                    "startNode": "{}",
                    "allowCollapse": false
                }
            ]
        },
        {
            "name": "Groups with Foreign Domain Group Membership",
            "category": "Dangerous Privileges",
            "queryList": [
                {
                    "final": false,
                    "title": "Select source domain...",
                    "query": "MATCH (n:Domain) RETURN n.name ORDER BY n.name DESC"
                },
                {
                    "final": true,
                    "query": "MATCH p=(n:Group {domain:$result})-[:MemberOf]->(m:Group) WHERE m.domain<>n.domain AND n.name<>m.name RETURN p",
                    "startNode": "{}",
                    "allowCollapse": false
                }
            ]
        },
        {
            "name": "Find Computers where Domain Users are Local Admin",
            "category": "Dangerous Privileges",
            "queryList": [
                {
                    "final": false,
                    "title": "Select a Domain Users Group...",
                    "query": "MATCH (n:Group) WHERE n.objectid ENDS WITH \"-513\" RETURN n.name ORDER BY n.name DESC"
                },
                {
                    "final": true,
                    "query": "MATCH p=(m:Group {name:$result})-[:AdminTo]->(n:Computer) RETURN p",
                    "allowCollapse": true
                }
            ]
        },
        {
            "name": "Find Computers where Domain Users can read LAPS passwords",
            "category": "Dangerous Privileges",
            "queryList": [
                {
                    "final": false,
                    "title": "Select a Domain Users Group...",
                    "query": "MATCH (n:Group) WHERE n.objectid ENDS WITH '-513' RETURN n.name ORDER BY n.name DESC"
                },
                {
                    "final": true,
                    "query": "MATCH p=(Group {name:$result})-[:MemberOf*0..]->(g:Group)-[:AllExtendedRights|ReadLAPSPassword]->(n:Computer) RETURN p",
                    "allowCollapse": true
                }
            ]
        },
        {
            "name": "Find All Paths from Domain Users to High Value Targets",
            "category": "Dangerous Privileges",
            "queryList": [
                {
                    "final": false,
                    "title": "Select a Domain Users Group...",
                    "query": "MATCH (n:Group) WHERE n.objectid ENDS WITH \"-513\" RETURN n.name ORDER BY n.name DESC"
                },
                {
                    "final": true,
                    "query": "MATCH p=shortestPath((g:Group {name:$result})-[*1..]->(n {highvalue:true})) WHERE g<>n return p",
                    "allowCollapse": true
                }
            ]
        },
        {
            "name": "Find Workstations where Domain Users can RDP",
            "category": "Dangerous Privileges",
            "queryList": [
                {
                    "final": false,
                    "title": "Select a Domain Users Group...",
                    "query": "MATCH (n:Group) WHERE n.objectid ENDS WITH \"-513\" RETURN n.name ORDER BY n.name DESC"
                },
                {
                    "final": true,
                    "query": "match p=(g:Group {name:$result})-[:CanRDP]->(c:Computer) where NOT c.operatingsystem CONTAINS \"Server\" return p",
                    "allowCollapse": true
                }
            ]
        },
        {
            "name": "Find Servers where Domain Users can RDP",
            "category": "Dangerous Privileges",
            "queryList": [
                {
                    "final": false,
                    "title": "Select a Domain Users Group...",
                    "query": "MATCH (n:Group) WHERE n.objectid ENDS WITH \"-513\" RETURN n.name ORDER BY n.name DESC"
                },
                {
                    "final": true,
                    "query": "MATCH p=(g:Group {name:$result})-[:CanRDP]->(c:Computer) WHERE c.operatingsystem CONTAINS \"Server\" return p",
                    "allowCollapse": false
                }
            ]
        },
        {
            "name": "Find Dangerous Privileges for Domain Users Groups",
            "category": "Dangerous Privileges",
            "queryList": [
                {
                    "final": false,
                    "title": "Select a Domain Users Group...",
                    "query": "MATCH (n:Group) WHERE n.objectid ENDS WITH \"-513\" RETURN n.name ORDER BY n.name DESC"
                },
                {
                    "final": true,
                    "query": "MATCH p=(m:Group)-[:Owns|WriteDacl|GenericAll|WriteOwner|ExecuteDCOM|GenericWrite|AllowedToDelegate|ForceChangePassword]->(n:Computer) WHERE m.objectid ENDS WITH \"-513\" RETURN p",
                    "allowCollapse": true
                }
            ]
        },
        {
            "name": "Find Domain Admin Logons to non-Domain Controllers",
            "category": "Dangerous Privileges",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (dc)-[r:MemberOf*0..]->(g:Group) WHERE g.objectid ENDS WITH '-516' WITH COLLECT(dc) AS exclude MATCH p = (c:Computer)-[n:HasSession]->(u:User)-[r2:MemberOf*1..]->(g:Group) WHERE  g.objectid ENDS WITH '-512' AND NOT c IN exclude RETURN p",
                    "allowCollapse": true
                }
            ]
        },
        {
            "name": "Find Kerberoastable Members of High Value Groups",
            "category": "Kerberos Interaction",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=shortestPath((n:User)-[:MemberOf]->(g:Group)) WHERE g.highvalue=true AND n.hasspn=true RETURN p",
                    "allowCollapse": true
                }
            ]
        },
        {
            "name": "List all Kerberoastable Accounts",
            "category": "Kerberos Interaction",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (n:User)WHERE n.hasspn=true RETURN n",
                    "allowCollapse": true
                }
            ]
        },
        {
            "name": "Find Kerberoastable Users with most privileges",
            "category": "Kerberos Interaction",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (u:User {hasspn:true}) OPTIONAL MATCH (u)-[:AdminTo]->(c1:Computer) OPTIONAL MATCH (u)-[:MemberOf*1..]->(:Group)-[:AdminTo]->(c2:Computer) WITH u,COLLECT(c1) + COLLECT(c2) AS tempVar UNWIND tempVar AS comps RETURN u.name,COUNT(DISTINCT(comps)) ORDER BY COUNT(DISTINCT(comps)) DESC",
                    "allowCollapse": true
                }
            ]
        },
        {
            "name": "Find AS-REP Roastable Users (DontReqPreAuth)",
            "category": "Kerberos Interaction",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (u:User {dontreqpreauth: true}) RETURN u",
                    "allowCollapse": true
                }
            ]
        },
        {
            "name": "Shortest Paths to Unconstrained Delegation Systems",
            "category": "Shortest Paths",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (n) MATCH p=shortestPath((n)-[:{}*1..]->(m:Computer {unconstraineddelegation: true})) WHERE NOT n=m RETURN p"
                }
            ]
        },
        {
            "name": "Shortest Paths from Kerberoastable Users",
            "category": "Shortest Paths",
            "queryList": [
                {
                    "final": false,
                    "title": "Select a domain...",
                    "query": "MATCH (n:Domain) RETURN n.name ORDER BY n.name DESC"
                },
                {
                    "final": false,
                    "title": "Select a user",
                    "query": "MATCH (n:User) WHERE n.domain=$result AND n.hasspn=true RETURN n.name, n.pwdlastset ORDER BY n.pwdlastset ASC"
                },
                {
                    "final": true,
                    "query": "MATCH p=shortestPath((a:User {name:$result})-[:{}*1..]->(b:Computer)) RETURN p",
                    "startNode": "{}",
                    "allowCollapse": true
                }
            ]
        },
        {
            "name": "Shortest Paths to Domain Admins from Kerberoastable Users",
            "category": "Shortest Paths",
            "queryList": [
                {
                    "final": false,
                    "title": "Select a Domain Admin group...",
                    "query": "MATCH (n:Group) WHERE n.objectid =~ $name RETURN n.name ORDER BY n.name DESC",
                    "props": {
                        "name": "(?i)S-1-5-.*-512"
                    }
                },
                {
                    "final": true,
                    "query": "MATCH p=shortestPath((n:User {hasspn:true})-[:{}*1..]->(m:Group {name:$result})) RETURN p",
                    "allowCollapse": true,
                    "endNode": "{}"
                }
            ]
        },
        {
            "name": "Shortest Path from Owned Principals",
            "category": "Shortest Paths",
            "queryList": [
                {
                    "final": false,
                    "title": "Select a domain...",
                    "query": "MATCH (n:Domain) RETURN n.name ORDER BY n.name DESC"
                },
                {
                    "final": false,
                    "title": "Select a user",
                    "query": "MATCH (n) WHERE n.domain=$result AND n.owned=true RETURN n.name, n.PwdLastSet ORDER BY n.PwdLastSet ASC"
                },
                {
                    "final": true,
                    "query": "MATCH p=shortestPath((a {name:$result})-[:{}*1..]->(b:Computer)) WHERE NOT a=b RETURN p",
                    "startNode": "{}",
                    "allowCollapse": true
                }
            ]
        },
        {
            "name": "Shortest Paths to Domain Admins from Owned Principals",
            "category": "Shortest Paths",
            "queryList": [
                {
                    "final": false,
                    "title": "Select a Domain Admin group...",
                    "query": "MATCH (n:Group) WHERE n.objectid =~ $name RETURN n.name ORDER BY n.name DESC",
                    "props": {
                        "name": "(?i)S-1-5-.*-512"
                    }
                },
                {
                    "final": true,
                    "query": "MATCH p=shortestPath((n {owned:true})-[:{}*1..]->(m:Group {name:$result})) WHERE NOT n=m RETURN p",
                    "allowCollapse": true,
                    "endNode": "{}"
                }
            ]
        },
        {
            "name": "Shortest Paths to High Value Targets",
            "category": "Shortest Paths",
            "queryList": [
                {
                    "final": false,
                    "title": "Select a Domain",
                    "query": "MATCH (n:Domain) RETURN n.name ORDER BY n.name DESC"
                },
                {
                    "final": true,
                    "query": "MATCH p=shortestPath((n)-[*1..]->(m {highvalue:true})) WHERE m.domain=$result AND m<>n RETURN p",
                    "allowCollapse": true,
                    "endNode": "{}"
                }
            ]
        },
        {
            "name": "Shortest Paths from Domain Users to High Value Targets",
            "category": "Shortest Paths",
            "queryList": [
                {
                    "final": false,
                    "title": "Select a Domain Users Group...",
                    "query": "MATCH (n:Group) WHERE n.objectid ENDS WITH \"-513\" RETURN n.name ORDER BY n.name DESC"
                },
                {
                    "final": true,
                    "query": "MATCH p=shortestPath((g:Group {name:$result})-[*1..]->(n {highvalue:true})) WHERE g.objectid ENDS WITH \"-513\" AND g<>n return p",
                    "allowCollapse": true
                }
            ]
        },
        {
            "name": "Find Shortest Paths to Domain Admins",
            "category": "Shortest Paths",
            "queryList": [
                {
                    "final": false,
                    "title": "Select a Domain Admin group...",
                    "query": "MATCH (n:Group) WHERE n.objectid =~ $name RETURN n.name ORDER BY n.name DESC",
                    "props": {
                        "name": "(?i)S-1-5-.*-512"
                    }
                },
                {
                    "final": true,
                    "query": "MATCH p=shortestPath((n)-[:{}*1..]->(m:Group {name:$result})) WHERE NOT n=m RETURN p",
                    "allowCollapse": true,
                    "endNode": "{}"
                }
            ]
        },
        {
			"name": "Return All Azure Users that are part of the 'Global Administrator' Role",
			"category": "Azure",
			"queryList": [
				{
					"final": true,
					"query": "MATCH p =(n)-[r:AZGlobalAdmin*1..]->(m) RETURN p"
				}
			]
		},
		{
			"name": "Find all paths to an Azure VM",
			"category": "Azure",
			"queryList": [
				{
					"final": true,
					"query": "MATCH p = (n)-[r]->(g:AZVM) RETURN p"
				}
			]
		},
		{
			"name": "Find all paths to an Azure KeyVault",
			"category": "Azure",
			"queryList": [
				{
					"final": true,
					"query": "MATCH p = (n)-[r]->(g:AZKeyVault) RETURN p"
				}
			]
		},
		{
			"name": "Return All Azure AD Groups that are synchronized with On-Premise AD",
			"category": "Azure",
			"queryList": [
				{
					"final": true,
					"query": "MATCH (g:AZGroup {onpremsyncenabled: True}) RETURN g"
				}
			]
		},
        {
			"name": "Return all Azure Users with a Path to High Value Targets",
			"category": "Azure",
			"queryList": [
				{
					"final": true,
					"query": "Return all Azure Users with a Path to High Value Targets MATCH (m:AZUser),(n {highvalue:true}),p=shortestPath((m)-[r*1..]->(n)) WHERE NONE (r IN relationships(p) WHERE type(r)= \"GetChanges\") AND NONE (r in relationships(p) WHERE type(r)=\"GetChangesAll\") AND NOT m=n RETURN p",
					"allowCollapse": true
				}
			]
		},
		{
			"name": "Find all Privileged Service Principals",
			"category": "Azure - Service Principals",
			"queryList": [
				{
					"final": true,
					"query": "MATCH p = (g:AZServicePrincipal)-[r]->(n) RETURN p"
				}
			]
		},
		{
			"name": "Find all Owners of Azure Applications",
			"category": "Azure",
			"queryList": [
				{
					"final": true,
					"query": "MATCH p = (n)-[r:AZOwns]->(g:AZApp) RETURN p"
				}
			]
		},
        {
			"name": "Return all paths to Azure Keyvaults from owned principals",
			"category": "Azure",
			"queryList": [
				{
					"final": true,
					"query": "MATCH p = ({owned: true})-[r]->(g:AZKeyVault) RETURN p",
					"allowCollapse": true
				}
			]
		},
		{
			"name": "Return All Service Principals with MS Graph App Role Assignments",
			"category": "Azure - MS Graph",
			"queryList": [
				{
					"final": true,
					"query": "MATCH p=(m:AZServicePrincipal)-[r:AZMGAppRoleAssignment_ReadWrite_All|AZMGApplication_ReadWrite_All|AZMGDirectory_ReadWrite_All|AZMGGroupMember_ReadWrite_All|AZMGGroup_ReadWrite_All|AZMGRoleManagement_ReadWrite_Directory|AZMGServicePrincipalEndpoint_ReadWrite_All]->(n:AZServicePrincipal) RETURN p",
					"allowCollapse": true
				}
			]
		},
		{
			"name": "Return all direct controllers of MS Graph",
			"category": "Azure - MS Graph",
			"queryList": [
				{
					"final": true,
					"query": "MATCH p = (n)-[r:AZAddOwner|AZAddSecret|AZAppAdmin|AZCloudAppAdmin|AZMGAddOwner|AZMGAddSecret|AZOwns]->(g:AZServicePrincipal {appdisplayname: \"Microsoft Graph\"}) RETURN p",
					"allowCollapse": true
				}
			]
		},
		{
			"name": "Find shortest paths to MS Graph",
			"category": "Azure - MS Graph",
			"queryList": [
				{
					"final": true,
					"query": "MATCH (n) WHERE NOT n.displayname=\"Microsoft Graph\" WITH n MATCH p = shortestPath((n)-[r*1..]->(g:AZServicePrincipal {appdisplayname: \"Microsoft Graph\"})) WHERE n<>g RETURN p",
					"allowCollapse": true
				}
			]
		},
		{
			"name": "Shortest path from Owned Azure Users to all Service Principals",
			"category": "Azure - Service Principals",
			"queryList": [
				{
					"final": true,
					"query": "MATCH (u:AZUser {owned: true}), (m:AZServicePrincipal) MATCH p = shortestPath((u)-[*..]->(m)) RETURN p",
					"allowCollapse": true
				}
			]
		},
		{
			"name": "Shortest path from Owned Azure Users to all Service Principals that are Managed Identities",
			"category": "Azure - Service Principals",
			"queryList": [
				{
					"final": true,
					"query": "MATCH (u:AZUser {owned: true}), (m:AZServicePrincipal {serviceprincipaltype: 'ManagedIdentity'}) MATCH p = shortestPath((u)-[*..]->(m)) RETURN p",
					"allowCollapse": true
				}
			]
		},
		{
			"name": "Shortest path from ALL Azure Users to all Service Principals that are Managed Identities",
			"category": "Azure - Service Principals",
			"queryList": [
				{
					"final": true,
					"query": "MATCH (u:AZUser), (m:AZServicePrincipal {serviceprincipaltype: 'ManagedIdentity'}) MATCH p = shortestPath((u)-[*..]->(m)) RETURN p",
					"allowCollapse": true
				}
			]
		},
		{
			"name": "List all Azure Service Principals",
			"category": "Azure - Service Principals",
			"queryList": [
				{
					"final": true,
					"query": "MATCH (sp:AZServicePrincipal) RETURN sp",
					"allowCollapse": true
				}
			]
		},
		{
			"name": "List all Azure Service Principals that are Managed Identities",
			"category": "Azure - Service Principals",
			"queryList": [
				{
					"final": true,
					"query": "MATCH (sp:AZServicePrincipal {serviceprincipaltype: 'ManagedIdentity'}) RETURN sp",
					"allowCollapse": true
				}
			]
		},
		{
			"name": "List all users possibly related to AADConnect",
			"category": "Azure - AADConnect",
			"queryList": [
				{
					"final": true,
					"query": "MATCH (u) WHERE (u:User OR u:AZUser) AND (u.name =~ '(?i)^MSOL_|.*AADConnect.*' OR u.userprincipalname =~ '(?i)^sync_.*') OPTIONAL MATCH (u)-[:HasSession]->(s:Session) RETURN u, s",
					"allowCollapse": true
				}
			]
		},
		{
			"name": "Shortest Path from Owned Azure Users to VMs",
			"category": "Azure",
			"queryList": [
				{
					"final": true,
					"query": "MATCH (n:AZVM) MATCH p = shortestPath((m:AZUser{owned: true})-[*..]->(n)) RETURN p",
					"allowCollapse": true
				}
			]
		},
		{
			"name": "Return all Sessions of possibly AADConnect related Accounts",
			"category": "Azure - AADConnect",
			"queryList": [
				{
					"final": true,
					"query": "MATCH p=(m:Computer)-[:HasSession]->(n) WHERE (n:User OR n:AZUser) AND ((n.name =~ '(?i)^MSOL_|.*AADConnect.*') OR (n.userPrincipalName =~ '(?i)^sync_.*')) RETURN p",
					"allowCollapse": true
				}
			]
		},
		{
			"name": "Return all AADConnect Servers (extracted from the SYNC_ Account names)",
			"category": "Azure - AADConnect",
			"queryList": [
				{
					"final": true,
					"query": "MATCH (n:AZUser) WHERE n.name =~ '(?i)^SYNC_(.*?)_(.*?)@.*' WITH n, split(n.name, '_')[1] AS computerNamePattern MATCH (c:Computer) WHERE c.name CONTAINS computerNamePattern RETURN c",
					"allowCollapse": true
				}
			]
		},
		{
			"name": "Shortest Path to AADConnect Servers from owned Users",
			"category": "Azure - AADConnect",
			"queryList": [
				{
					"final": true,
					"query": "MATCH (n:AZUser) WHERE n.name =~ '(?i)^SYNC_(.*?)_(.*?)@.*' WITH n, split(n.name, '_')[1] AS computerNamePattern MATCH (c:Computer) WHERE c.name CONTAINS computerNamePattern WITH collect(c) AS computers MATCH p = shortestPath((u:User)-[*]-(c:Computer)) WHERE c IN computers AND length(p) > 0 AND u.owned = true RETURN u, p",
					"allowCollapse": true
				}
			]
		},
		{
			"name": "Return all VMs with a tied Managed Identity",
			"category": "Azure - Service Principals",
			"queryList": [
				{
					"final": true,
					"query": "MATCH p=(:AZVM)-[:AZManagedIdentity]->(n) RETURN p",
					"allowCollapse": true
				}
			]
		},
		{
			"name": "Return all Service Principals that are a Managed Identity an have a path to a Key Vault",
			"category": "Azure - Service Principals",
			"queryList": [
				{
					"final": true,
					"query": "MATCH (m:AZServicePrincipal {serviceprincipaltype: 'ManagedIdentity'})-[*]->(kv:AZKeyVault) WITH collect(m) AS managedIdentities MATCH p = (n)-[r]->(kv:AZKeyVault) WHERE n IN managedIdentities RETURN p",
					"allowCollapse": true
				}
			]
		},
		{
			"name": "Return paths from Managed Identities tied to a VM with a path to a Key Vault",
			"category": "Azure - Service Principals",
			"queryList": [
				{
					"final": true,
					"query": "MATCH p1 = (:AZVM)-[:AZManagedIdentity]->(n) WITH collect(n) AS managedIdentities MATCH p2 = (m:AZServicePrincipal {serviceprincipaltype: 'ManagedIdentity'})-[*]->(kv:AZKeyVault) WHERE m IN managedIdentities RETURN p2",
					"allowCollapse": true
				}
			]
		}
    ]
}
